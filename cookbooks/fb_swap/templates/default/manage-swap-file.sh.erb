#!/bin/sh
# creates or deletes the swapfile

set -euo pipefail
<%
filesystem = node['fb_swap']['filesystem']
filesystem += '/' unless filesystem.end_with?('/')
fs_type = FB::FbSwap._filesystem_map_for_fs(node)['fs_type']
file_size_bytes = node['fb_swap']['_calculated']['file_size_bytes']
-%>
vol='<%= filesystem %>swapvol'
<%
if file_size_bytes > 0
-%>
file="${vol}/swapfile"
unformatted="${file}.tmp"
# ensure the subvolume or directory itself exists
if [ ! -d "${vol}" ] ; then
<% if fs_type == 'btrfs' -%>
    /usr/sbin/btrfs subvolume create "${vol}"
<% else -%>
    mkdir "${vol}"
<% end -%>
fi
if [ -f "${file}" ] ; then
    measured_size_bytes=$(/usr/bin/stat --printf='%s' "${file}")
    if [ "${measured_size_bytes}" -ne '<%= file_size_bytes %>' ] ; then
        # wrong size, try to remove it. Note this doesn't work if it's mounted, but
        # it shouldn't be mounted at this point.
        /usr/bin/rm --force "${file}"
    fi
fi
if [ ! -f "${file}" ] ; then
    # This is a multi-step process, so we use a different filename first
    # we never enable swap on this name so we can reliably clean up partial runs
    /usr/bin/rm --force "${unformatted}"
    # create a new empty file
    /usr/bin/touch "${unformatted}"
<% if fs_type == 'btrfs' -%>
    # Mark as no-copy-on-write. Only works on new/empty files.
    /usr/bin/chattr +C "${unformatted}"
<% end -%>
<% if fs_type == 'xfs' -%>
    # fallocate on xfs can't creates working swapfiles, fill them up with dd
    /usr/bin/dd if=/dev/zero of="${unformatted}" iflag=count_bytes bs=1M count=<%= file_size_bytes %>
<% else -%>
    /usr/bin/fallocate --length <%= file_size_bytes %> "${unformatted}"
<% end -%>
    /usr/bin/chmod 0600 "${unformatted}"
    /usr/sbin/mkswap "${unformatted}"
    /usr/bin/mv --force "${unformatted}" "${file}"
fi
<%
else
-%>
# remove swapvol
if [ -d "${vol}" ] ; then
<% if fs_type == 'btrfs' -%>
    /usr/sbin/btrfs subvolume delete "${vol}"
<% else -%>
    /usr/bin/rm --force --recursive "${vol}"
<% end -%>
fi
<%
end
-%>
